i = 1
# creating the series same as before
n <- rnorm( length(year_series), random_averages[i], 50000)
n_id <- n
n_distinct_id <- n * random_props
fake_table <- cbind(year_series, n)
fake_table <- as.data.frame(fake_table)
fake_table$n_id <- n_id
fake_table$n_distinct_id <- n_distinct_id
# label it and the cols
fake_table[5] <- paste0("dummySNOMEDcode", i)
head(fake_table)
listofseries[[i]] <- fake_table
# Establishing parameters
year_series <- c(1990:2021)
number_of_series <- 5
set.seed(007)
# Here we randomly generate the averages
random_averages <- rnorm( number_of_series, 10000, 5000)*100
# Some proportions to decide how the relationship between records and people
random_props <- rnorm( length(year_series), 0.7 , 0.025)
# Creating fake frequencies by sampling the normal distribution - and making there is a freq for each interval
listofseries <- list()
for(i in c(1:number_of_series)){
# creating the series same as before
n <- rnorm( length(year_series), random_averages[i], 50000)
n_id <- n
n_distinct_id <- n * random_props
fake_table <- cbind(year_series, n)
fake_table <- as.data.frame(fake_table)
fake_table$n_id <- n_id
fake_table$n_distinct_id <- n_distinct_id
# label it and the cols
fake_table[5] <- paste0("dummySNOMEDcode", i)
colnames(fake_table) <- c("year", "freq", "codename")
head(fake_table)
listofseries[[i]] <- fake_table
# now saving we've created a time series for a code and labelled it, we can save this to our list and move onto the next loop
}
multipleCODEtable <- do.call("rbind", listofseries)
multipleCODEtable
colnames(fake_table)[1] <- c("year")
# Establishing parameters
year_series <- c(1990:2021)
number_of_series <- 5
set.seed(007)
# Here we randomly generate the averages
random_averages <- rnorm( number_of_series, 10000, 5000)*100
# Some proportions to decide how the relationship between records and people
random_props <- rnorm( length(year_series), 0.7 , 0.025)
# Creating fake frequencies by sampling the normal distribution - and making there is a freq for each interval
listofseries <- list()
for(i in c(1:number_of_series)){
# creating the series same as before
n <- rnorm( length(year_series), random_averages[i], 50000)
n_id <- n
n_distinct_id <- n * random_props
fake_table <- cbind(year_series, n)
fake_table <- as.data.frame(fake_table)
fake_table$n_id <- n_id
fake_table$n_distinct_id <- n_distinct_id
# label it and the cols
fake_table[5] <- paste0("dummySNOMEDcode", i)
colnames(fake_table)[1] <- c("year")
head(fake_table)
listofseries[[i]] <- fake_table
# now saving we've created a time series for a code and labelled it, we can save this to our list and move onto the next loop
}
multipleCODEtable <- do.call("rbind", listofseries)
multipleCODEtable
# Establishing parameters
year_series <- c(1990:2021)
number_of_series <- 5
set.seed(007)
# Here we randomly generate the averages
random_averages <- rnorm( number_of_series, 10000, 5000)*100
# Some proportions to decide how the relationship between records and people
random_props <- rnorm( length(year_series), 0.7 , 0.025)
# Creating fake frequencies by sampling the normal distribution - and making there is a freq for each interval
listofseries <- list()
for(i in c(1:number_of_series)){
# creating the series same as before
n <- rnorm( length(year_series), random_averages[i], 50000)
n_id <- n
n_distinct_id <- n * random_props
fake_table <- cbind(year_series, n)
fake_table <- as.data.frame(fake_table)
fake_table$n_id <- n_id
fake_table$n_distinct_id <- n_distinct_id
# label it and the cols
fake_table[5] <- paste0("dummyConceptcode", i)
colnames(fake_table)[1] <- c("year")
colnames(fake_table)[5] <- c("concept")
head(fake_table)
listofseries[[i]] <- fake_table
# now saving we've created a time series for a code and labelled it, we can save this to our list and move onto the next loop
}
multipleCODEtable <- do.call("rbind", listofseries)
multipleCODEtable
library(ggplot2)
ggplot(multipleCODEtable,  aes(x = year)) +
geom_line(aes(y = n), color = "black") +
geom_line(aes(y = n_id), color = "red") +
geom_line(aes(y = n_distinct_id), color = "green") +
expand_limits(y = 0)
ggplot(multipleCODEtable,  aes(x = year)) +
geom_line(aes(y = n), color = "black") +
geom_line(aes(y = n_distinct_id), color = "green") +
expand_limits(y = 0)
specificCode <- multipleCODEtable %>% filter( concept == "dummyConceptcode1"  )
library(dplyr)
specificCode <- multipleCODEtable %>% filter( concept == "dummyConceptcode1"  )
ggplot(specificCode,  aes(x = year)) +
geom_line(aes(y = n), color = "black") +
geom_line(aes(y = n_distinct_id), color = "green") +
expand_limits(y = 0)
# Establishing parameters
year_series <- c(1990:2021)
number_of_series <- 5
set.seed(007)
# Here we randomly generate the averages
random_averages <- rnorm( number_of_series, 10000, 5000)*100
# Some proportions to decide how the relationship between records and people
random_props <- rnorm( length(year_series), 0.7 , 0.25)
# Creating fake frequencies by sampling the normal distribution - and making there is a freq for each interval
listofseries <- list()
for(i in c(1:number_of_series)){
# creating the series same as before
n <- rnorm( length(year_series), random_averages[i], 50000)
n_id <- n
n_distinct_id <- n * random_props
fake_table <- cbind(year_series, n)
fake_table <- as.data.frame(fake_table)
fake_table$n_id <- n_id
fake_table$n_distinct_id <- n_distinct_id
# label it and the cols
fake_table[5] <- paste0("dummyConceptcode", i)
colnames(fake_table)[1] <- c("year")
colnames(fake_table)[5] <- c("concept")
head(fake_table)
listofseries[[i]] <- fake_table
# now saving we've created a time series for a code and labelled it, we can save this to our list and move onto the next loop
}
multipleCODEtable <- do.call("rbind", listofseries)
head(multipleCODEtable)
library(ggplot2)
library(dplyr)
specificCode <- multipleCODEtable %>% filter( concept == "dummyConceptcode1"  )
ggplot(specificCode,  aes(x = year)) +
geom_line(aes(y = n), color = "black") +
geom_line(aes(y = n_distinct_id), color = "green") +
expand_limits(y = 0)
# Establishing parameters
year_series <- c(1990:2021)
number_of_series <- 5
set.seed(007)
# Here we randomly generate the averages
random_averages <- rnorm( number_of_series, 10000, 5000)*100
# Some proportions to decide how the relationship between records and people
random_props <- rnorm( length(year_series), 0.7 , 0.125)
# Creating fake frequencies by sampling the normal distribution - and making there is a freq for each interval
listofseries <- list()
for(i in c(1:number_of_series)){
# creating the series same as before
n <- rnorm( length(year_series), random_averages[i], 50000)
n_id <- n
n_distinct_id <- n * random_props
fake_table <- cbind(year_series, n)
fake_table <- as.data.frame(fake_table)
fake_table$n_id <- n_id
fake_table$n_distinct_id <- n_distinct_id
# label it and the cols
fake_table[5] <- paste0("dummyConceptcode", i)
colnames(fake_table)[1] <- c("year")
colnames(fake_table)[5] <- c("concept")
head(fake_table)
listofseries[[i]] <- fake_table
# now saving we've created a time series for a code and labelled it, we can save this to our list and move onto the next loop
}
multipleCODEtable <- do.call("rbind", listofseries)
head(multipleCODEtable)
library(ggplot2)
library(dplyr)
specificCode <- multipleCODEtable %>% filter( concept == "dummyConceptcode1"  )
ggplot(specificCode,  aes(x = year)) +
geom_line(aes(y = n), color = "black") +
geom_line(aes(y = n_distinct_id), color = "green") +
expand_limits(y = 0)
# Establishing parameters
year_series <- c(1990:2021)
number_of_series <- 5
set.seed(007)
# Here we randomly generate the averages
random_averages <- rnorm( number_of_series, 10000, 5000)*100
# Some proportions to decide how the relationship between records and people
random_props <- rnorm( length(year_series), 0.6 , 0.075)
# Creating fake frequencies by sampling the normal distribution - and making there is a freq for each interval
listofseries <- list()
for(i in c(1:number_of_series)){
# creating the series same as before
n <- rnorm( length(year_series), random_averages[i], 50000)
n_id <- n
n_distinct_id <- n * random_props
fake_table <- cbind(year_series, n)
fake_table <- as.data.frame(fake_table)
fake_table$n_id <- n_id
fake_table$n_distinct_id <- n_distinct_id
# label it and the cols
fake_table[5] <- paste0("dummyConceptcode", i)
colnames(fake_table)[1] <- c("year")
colnames(fake_table)[5] <- c("concept")
head(fake_table)
listofseries[[i]] <- fake_table
# now saving we've created a time series for a code and labelled it, we can save this to our list and move onto the next loop
}
multipleCODEtable <- do.call("rbind", listofseries)
head(multipleCODEtable)
library(ggplot2)
library(dplyr)
specificCode <- multipleCODEtable %>% filter( concept == "dummyConceptcode1"  )
ggplot(specificCode,  aes(x = year)) +
geom_line(aes(y = n), color = "black") +
geom_line(aes(y = n_distinct_id), color = "green") +
expand_limits(y = 0)
ggplot(specificCode,  aes(x = year)) +
geom_line(aes(y = n), color = "black") +
geom_line(aes(y = n_distinct_id), color = "green", show.legend = TRUE) +
expand_limits(y = 0)
# Establishing parameters
year_series <- c(1990:2021)
number_of_series <- 5
set.seed(007)
# Creating fake frequencies by sampling the normal distribution - and making there is a freq for each interval
listofseries <- list()
for(n in c(1:number_of_series)){
# creating the series same as before
basic_freq <- rnorm( length(year_series), 1000000, 50000)
fake_table <- cbind(year_series, basic_freq)
fake_table <- as.data.frame(fake_table)
# label it and the cols
fake_table[3] <- paste0("dummySNOMEDcode", n)
colnames(fake_table) <- c("year", "freq", "codename")
head(fake_table)
listofseries[[n]] <- fake_table
# now saving we've created a time series for a code and labelled it, we can save this to our list and move onto the next loop
}
multipleCODEtable <- do.call("rbind", listofseries)
multipleCODEtable
library(ggplot2)
ggplot(multipleCODEtable,  aes(x=year, y= freq, group=codename, color=codename)) +
geom_line() + expand_limits(y=0)
sample( start_years, 1, replace = TRUE)
start_years <- c(1990:2018)
sample( start_years, 1, replace = TRUE)
start_years <- c(1990:2018)
sample( start_years, 1, replace = TRUE)
start_years <- c(1990:2018)
sample( start_years, 1, replace = TRUE)
start_years <- c(1990:2018)
startyear <- sample( start_years, 1, replace = TRUE)
index(start_years, startyear)
match(start_years, startyear)
which(start_years, startyear)
start_years <- c(1990:2018)
startyear <- sample( start_years, 1, replace = TRUE)
which(start_years, startyear)
which( startyear, start_years)
where( startyear, start_years)
which(match(start_years, startyear))
start_years <- c(1990:2018)
startyear <- sample( start_years, 1, replace = TRUE)
which(match(start_years, startyear))
match(start_years, startyear)
length(start_years < startyear)
start_years <- c(1990:2018)
startyear <- sample( start_years, 1, replace = TRUE)
length(start_years < startyear)
start_years <- c(1990:2018)
startyear <- sample( start_years, 1, replace = TRUE)
length(start_years < startyear)
start_years <- c(1990:2018)
startyear <- sample( start_years, 1, replace = TRUE)
length(start_years < startyear)
start_years <- c(1990:2018)
startyear <- sample( start_years, 1, replace = TRUE)
sum(start_years < startyear)
start_years <- c(1990:2018)
startyear <- sample( start_years, 1, replace = TRUE)
sum(start_years < startyear)
start_years <- c(1990:2018)
startyear <- sample( start_years, 1, replace = TRUE)
sum(start_years < startyear)
start_years <- c(1990:2018)
startyear <- sample( start_years, 1, replace = TRUE)
sum(start_years < startyear)
# Establishing parameters
year_series <- c(1990:2021)
number_of_series <- 5
set.seed(007)
# Establishing all the possible years the data could start in
start_years <- c(1990:2018)
# Establishing the possible values before this point. They're negligible but sometimes rounded to 10 due to suppression
low_values <- c(0, 10)
# Creating fake frequencies by sampling the normal distribution - and making there is a freq for each interval
listofseries <- list()
for(n in c(1:number_of_series)){
# creating the series same as before
basic_freq <- rnorm( length(year_series), 1000000, 50000)
fake_table <- cbind(year_series, basic_freq)
fake_table <- as.data.frame(fake_table)
# Now introducing a start year
start_year <- sample( start_years, 1, replace = TRUE)
# Establishing how many years preceed this
yearsbefore <- sum(start_years < startyear)
# Replacing the earlier frequencies with a negligible value
fake_table$freq[ 1:yearsbefore] <- sample( low_values, yearsbefore)
# label it and the cols
fake_table[3] <- paste0("dummySNOMEDcode", n)
colnames(fake_table) <- c("year", "freq", "codename")
head(fake_table)
listofseries[[n]] <- fake_table
# now saving we've created a time series for a code and labelled it, we can save this to our list and move onto the next loop
}
# creating the series same as before
basic_freq <- rnorm( length(year_series), 1000000, 50000)
fake_table <- cbind(year_series, basic_freq)
fake_table <- as.data.frame(fake_table)
# Now introducing a start year
start_year <- sample( start_years, 1, replace = TRUE)
# Establishing how many years preceed this
yearsbefore <- sum(start_years < startyear)
# Replacing the earlier frequencies with a negligible value
fake_table$freq[ 1:yearsbefore] <- sample( low_values, yearsbefore)
sample( low_values, yearsbefore)
sample( low_values, yearsbefore)
fake_table$freq
fake_table$freq[ 1:yearsbefore]
fake_table$freq
head(fake_table)
# creating the series same as before
basic_freq <- rnorm( length(year_series), 1000000, 50000)
fake_table <- cbind(year_series, basic_freq)
fake_table <- as.data.frame(fake_table)
# label it and the cols
fake_table[3] <- paste0("dummySNOMEDcode", n)
colnames(fake_table) <- c("year", "freq", "codename")
head(fake_table)
# Now introducing a start year
start_year <- sample( start_years, 1, replace = TRUE)
# Establishing how many years preceed this
yearsbefore <- sum(start_years < startyear)
# Replacing the earlier frequencies with a negligible value
fake_table$freq[ 1:yearsbefore] <- sample( low_values, yearsbefore)
fake_table
fake_table$freq
fake_table$freq[ 1:yearsbefore]
sample( low_values, yearsbefore)
# Replacing the earlier frequencies with a negligible value
fake_table$freq[ 1:yearsbefore] <- sample( low_values, yearsbefore, replace = TRUE)
# Establishing parameters
year_series <- c(1990:2021)
number_of_series <- 5
set.seed(007)
# Establishing all the possible years the data could start in
start_years <- c(1990:2018)
# Establishing the possible values before this point. They're negligible but sometimes rounded to 10 due to suppression
low_values <- c(0, 10)
# Creating fake frequencies by sampling the normal distribution - and making there is a freq for each interval
listofseries <- list()
for(n in c(1:number_of_series)){
# creating the series same as before
basic_freq <- rnorm( length(year_series), 1000000, 50000)
fake_table <- cbind(year_series, basic_freq)
fake_table <- as.data.frame(fake_table)
# label it and the cols
fake_table[3] <- paste0("dummySNOMEDcode", n)
colnames(fake_table) <- c("year", "freq", "codename")
head(fake_table)
# Now introducing a start year
start_year <- sample( start_years, 1, replace = TRUE)
# Establishing how many years preceed this
yearsbefore <- sum(start_years < startyear)
# Replacing the earlier frequencies with a negligible value
fake_table$freq[ 1:yearsbefore] <- sample( low_values, yearsbefore, replace = TRUE)
listofseries[[n]] <- fake_table
# now saving we've created a time series for a code and labelled it, we can save this to our list and move onto the next loop
}
multipleCODEtable <- do.call("rbind", listofseries)
multipleCODEtable
library(ggplot2)
ggplot(multipleCODEtable,  aes(x=year, y= freq, group=codename, color=codename)) +
geom_line() + expand_limits(y=0)
# Establishing parameters
year_series <- c(1990:2021)
number_of_series <- 5
set.seed(007)
# Establishing all the possible years the data could start in
start_years <- c(1990:2018)
selected_start_years <- sample( start_years, 5, replace = TRUE)
# Establishing the possible values before this point. They're negligible but sometimes rounded to 10 due to suppression
low_values <- c(0, 10)
# Creating fake frequencies by sampling the normal distribution - and making there is a freq for each interval
listofseries <- list()
for(n in c(1:number_of_series)){
# creating the series same as before
basic_freq <- rnorm( length(year_series), 1000000, 50000)
fake_table <- cbind(year_series, basic_freq)
fake_table <- as.data.frame(fake_table)
# label it and the cols
fake_table[3] <- paste0("dummySNOMEDcode", n)
colnames(fake_table) <- c("year", "freq", "codename")
head(fake_table)
# Now introducing a start year
start_year <- selected_start_years[n]
# Establishing how many years preceed this
yearsbefore <- sum(start_years < startyear)
# Replacing the earlier frequencies with a negligible value
fake_table$freq[ 1:yearsbefore] <- sample( low_values, yearsbefore, replace = TRUE)
listofseries[[n]] <- fake_table
# now saving we've created a time series for a code and labelled it, we can save this to our list and move onto the next loop
}
multipleCODEtable <- do.call("rbind", listofseries)
multipleCODEtable
library(ggplot2)
ggplot(multipleCODEtable,  aes(x=year, y= freq, group=codename, color=codename)) +
geom_line() + expand_limits(y=0)
sample( start_years, 5, replace = TRUE)
selected_start_years[n]
# Now introducing a start year
start_year <- selected_start_years[n]
# Establishing how many years preceed this
yearsbefore <- sum(start_years < startyear)
# Replacing the earlier frequencies with a negligible value
fake_table$freq[ 1:yearsbefore] <- sample( low_values, yearsbefore, replace = TRUE)
listofseries[[n]] <- fake_table
View(listofseries)
# Establishing parameters
year_series <- c(1990:2021)
number_of_series <- 5
set.seed(007)
# Establishing all the possible years the data could start in
start_years <- c(1990:2018)
selected_start_years <- sample( start_years, 5, replace = TRUE)
# Establishing the possible values before this point. They're negligible but sometimes rounded to 10 due to suppression
low_values <- c(0, 10)
# Creating fake frequencies by sampling the normal distribution - and making there is a freq for each interval
listofseries <- list()
for(n in c(1:number_of_series)){
# creating the series same as before
basic_freq <- rnorm( length(year_series), 1000000, 50000)
fake_table <- cbind(year_series, basic_freq)
fake_table <- as.data.frame(fake_table)
# label it and the cols
fake_table[3] <- paste0("dummySNOMEDcode", n)
colnames(fake_table) <- c("year", "freq", "codename")
head(fake_table)
# Now introducing a start year
start_year <- selected_start_years[n]
# Establishing how many years preceed this
yearsbefore <- sum(start_years < startyear)
# Replacing the earlier frequencies with a negligible value
fake_table$freq[ 1:yearsbefore] <- sample( low_values, yearsbefore, replace = TRUE)
listofseries[[n]] <- fake_table
# now saving we've created a time series for a code and labelled it, we can save this to our list and move onto the next loop
}
multipleCODEtable <- do.call("rbind", listofseries)
multipleCODEtable
year_series <- c(1990:2021)
number_of_series <- 5
set.seed(007)
# Establishing all the possible years the data could start in
start_years <- c(1990:2018)
selected_start_years <- sample( start_years, 5, replace = TRUE)
# Now introducing a start year
start_year <- selected_start_years[n]
# Establishing how many years preceed this
yearsbefore <- sum(start_years < startyear)
rm(startyear)
# Establishing parameters
year_series <- c(1990:2021)
number_of_series <- 5
set.seed(007)
# Establishing all the possible years the data could start in
start_years <- c(1990:2018)
selected_start_years <- sample( start_years, 5, replace = TRUE)
# Establishing the possible values before this point. They're negligible but sometimes rounded to 10 due to suppression
low_values <- c(0, 10)
# Creating fake frequencies by sampling the normal distribution - and making there is a freq for each interval
listofseries <- list()
for(n in c(1:number_of_series)){
# creating the series same as before
basic_freq <- rnorm( length(year_series), 1000000, 50000)
fake_table <- cbind(year_series, basic_freq)
fake_table <- as.data.frame(fake_table)
# label it and the cols
fake_table[3] <- paste0("dummySNOMEDcode", n)
colnames(fake_table) <- c("year", "freq", "codename")
head(fake_table)
# Now introducing a start year
start_year <- selected_start_years[n]
# Establishing how many years preceed this
yearsbefore <- sum(start_years < start_year)
# Replacing the earlier frequencies with a negligible value
fake_table$freq[ 1:yearsbefore] <- sample( low_values, yearsbefore, replace = TRUE)
listofseries[[n]] <- fake_table
# now saving we've created a time series for a code and labelled it, we can save this to our list and move onto the next loop
}
multipleCODEtable <- do.call("rbind", listofseries)
multipleCODEtable
library(ggplot2)
ggplot(multipleCODEtable,  aes(x=year, y= freq, group=codename, color=codename)) +
geom_line() + expand_limits(y=0)
